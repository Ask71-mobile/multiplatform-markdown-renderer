# Thanks to https://github.com/coil-kt/coil/blob/master/.github/workflows/ci.yml
name: CI

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  publish_archives:
    name: Publish Archives
    if: startsWith(github.ref, 'refs/tags/')

    strategy:
      matrix:
        os: [ macos-14 ]

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: |
            11
            15
            17

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Cache konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Publish the macOS artifacts
        if: matrix.os == 'macos-14'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          ./gradlew multiplatform-markdown-renderer:publishAllPublicationsToMavenCentralRepository --no-daemon --no-configure-on-demand --no-parallel
          ./gradlew multiplatform-markdown-renderer-m2:publishAllPublicationsToMavenCentralRepository --no-daemon --no-configure-on-demand --no-parallel
          ./gradlew multiplatform-markdown-renderer-m3:publishAllPublicationsToMavenCentralRepository --no-daemon --no-configure-on-demand --no-parallel
          ./gradlew multiplatform-markdown-renderer-coil2:publishAllPublicationsToMavenCentralRepository --no-daemon --no-configure-on-demand --no-parallel
          ./gradlew multiplatform-markdown-renderer-coil3:publishAllPublicationsToMavenCentralRepository --no-daemon --no-configure-on-demand --no-parallel

  build:
    name: Build
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 100

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Debug
        run: |
          ./gradlew clean || true
          ./gradlew app:assembleDebug --stacktrace

      - name: Run Tests
        run: |
          ./gradlew app:validateDebugScreenshotTest

      - name: Publish Test Report
        if: (failure() || success()) && github.event_name == 'pull_request'
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/app/build/test-results/validateDebugScreenshotTest/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_failure: true
          annotate_only: true
          detailed_summary: true

      - name: Archive Test Report
        uses: actions/upload-artifact@v4
        with:
          name: "Test-Artifacts"
          path: "app/build/reports/screenshotTest/preview/debug/"

      - name: Run Lint
        if: github.event_name  == 'pull_request'
        run: ./gradlew lintDebug

      - name: Detekt
        if: github.event_name  == 'pull_request' && false
        run: ./gradlew detekt

      - name: Setup Ruby
        if: github.event_name  == 'pull_request'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Run Danger
        if: github.event_name  == 'pull_request'
        run: |
          gem install danger
          bundle exec danger --dangerfile=Dangerfile --danger_id=danger-pr
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Keystore and Local.
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "${{ secrets.KEYSTORE }}" > opensource.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "opensource.jks.asc" > "app/opensource.jks"
          echo "${{ secrets.SIGNING_GRADLE }}" > signing.gradle.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch "signing.gradle.asc" > "app/signing.gradle"
          echo "openSource.signing.file=signing.gradle" >> local.properties

      - name: Build Release App
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew app:assembleRelease app:bundleRelease

      - name: Collect artifacts
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          COLLECT_PWD=${PWD}
          mkdir -p "artifacts"
          find . -name "*release.apk" -type f -exec cp {} "artifacts" \;
          find . -name "*release.aab" -type f -exec cp {} "artifacts" \;

      - name: Archive Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: "App-Artifacts"
          path: artifacts/*

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          configuration: ".github/config/configuration.json"
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: mikepenz/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}